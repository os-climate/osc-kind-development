apiVersion: apps/v1
kind: Deployment
metadata:
  name: airflow
  labels:
    app: airflow
spec:
  replicas: 1
  selector:
    matchLabels:
      app: airflow
  template:
    metadata:
      labels:
        app: airflow
    spec:
      # nodeSelector: {}
      securityContext:
        runAsUser: 50000
        runAsGroup: 0
      initContainers:
      - name: init-airflow-db
        image: osclimate/airflow:2.9.3
        env:
        - name: AIRFLOW__CORE__EXECUTOR
          value: LocalExecutor
        - name: AIRFLOW__WEBSERVER__SECRET_KEY
          value: airflow
        - name: AIRFLOW__CORE__SQL_ALCHEMY_CONN
          value: postgresql+psycopg2://airflow:airflow123$@postgres:5432/airflow
        - name: AIRFLOW_CONN_S3
          value: aws://minioAdmin:minio1234@/?endpoint_url=http:%2F%2Fminio:9000
        - name: AIRFLOW_CONN_TRINO_CONNECTION
          value: trino://admin:@trino:8081/
        # - name:_PIP_ADDITIONAL_REQUIREMENTS:
        #   value: pandas openpyxl trino pyarrow boto3 apache-airflow-providers-openlineage
        # command: [ "sh", "-c", "airflow db migrate && airflow users create --username admin --password airflow123 --firstname Admin --lastname User --role Admin --email admin@example.com" ]
        # command: [ "/bin/bash", "-c" ]
        # args:
        command: [ "/bin/bash", "-c" ]
        args:
        - |
          airflow db init && \
          airflow users create \
            --username airflow \
            --password airflow \
            --firstname Admin \
            --lastname User \
            --role Admin \
            --email admin@example.com
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - name: airflow-dags
          mountPath: /opt/airflow/dags
        - name: logs
          mountPath: /opt/airflow/logs
      containers:
      - name: airflow-webserver
        image: osclimate/airflow:2.9.3
        securityContext:
          runAsUser: 50000
          runAsGroup: 0
        args: [ "webserver" ]
        env:
        - name: AIRFLOW__CORE__EXECUTOR
          value: LocalExecutor
        - name: AIRFLOW__WEBSERVER__SECRET_KEY
          value: airflow
        - name: AIRFLOW__CORE__SQL_ALCHEMY_CONN
          value: postgresql+psycopg2://airflow:airflow123$@postgres:5432/airflow
        - name: AIRFLOW_CONN_S3
          value: aws://minioAdmin:minio1234@/?endpoint_url=http:%2F%2Fminio:9000
        - name: AIRFLOW_CONN_TRINO_CONNECTION
          value: trino://admin:@trino:8081/
        - name: AIRFLOW__OPENLINEAGE__TRANSPORT
          value: '{"type": "http", "url": "http://ma:5000", "endpoint": "api/v1/lineage"}'
        - name: AIRFLOW__OPENLINEAGE__NAMESPACE
          value: 'airflow-namespace'
        - name: AIRFLOW__OPENLINEAGE__EXECUTION_TIMEOUT
          value: '60'
        - name: AIRFLOW__OPENLINEAGE__INCLUDE_FULL_TASK_INFO
          value: 'True'
        - name: AIRFLOW__OPENLINEAGE__DEBUG_MODE
          value: 'True'
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
        volumeMounts:
        - name: airflow-dags
          mountPath: /opt/airflow/dags
        - name: logs
          mountPath: /opt/airflow/logs
      - name: scheduler
        image: osclimate/airflow:2.9.3
        securityContext:
          runAsUser: 50000
          runAsGroup: 0
        args:
        - bash
        - '-c'
        - exec airflow scheduler
        env:
        - name: AIRFLOW__CORE__EXECUTOR
          value: LocalExecutor
        - name: AIRFLOW__WEBSERVER__SECRET_KEY
          value: airflow
        - name: AIRFLOW__CORE__SQL_ALCHEMY_CONN
          value: "postgresql+psycopg2://airflow:airflow123$@postgres:5432/airflow"
        - name: AIRFLOW_CONN_S3
          value: aws://minioAdmin:minio1234@/?endpoint_url=http:%2F%2Fminio:9000
        - name: AIRFLOW_CONN_TRINO_CONNECTION
          value: trino://admin:@trino:8081/
        - name: AIRFLOW__KUBERNETES__NAMESPACE
          value: osclimate
        - name: AIRFLOW__OPENLINEAGE__TRANSPORT
          value: '{"type": "http", "url": "http://ma:5000", "endpoint": "api/v1/lineage"}'
        - name: AIRFLOW__OPENLINEAGE__NAMESPACE
          value: 'airflow-namespace'
        - name: AIRFLOW__OPENLINEAGE__EXECUTION_TIMEOUT
          value: '60'
        - name: AIRFLOW__OPENLINEAGE__INCLUDE_FULL_TASK_INFO
          value: 'True'
        - name: AIRFLOW__OPENLINEAGE__DEBUG_MODE
          value: 'True'
        volumeMounts:
        - name: airflow-dags
          mountPath: /opt/airflow/dags
        - name: logs
          mountPath: /opt/airflow/logs
      volumes:
      - name: airflow-dags
        persistentVolumeClaim:
          claimName: airflow-dags-pvc
      - name: logs
        persistentVolumeClaim:
          claimName: airflow-logs-pvc
