apiVersion: apps/v1
kind: Deployment
metadata:
  name: airflow
  labels:
    app: airflow
spec:
  replicas: 1
  selector:
    matchLabels:
      app: airflow
  template:
    metadata:
      labels:
        app: airflow
    spec:
      # nodeSelector: {}
      securityContext:
        runAsUser: 0
      # initContainers:
      # - name: init-airflow-db
      #   image: osclimate/airflow:2.9.3
      #   env:
      #   - name: AIRFLOW__CORE__EXECUTOR
      #     value: KubernetesExecutor
      #   - name: AIRFLOW__WEBSERVER__SECRET_KEY
      #     value: airflow
      #   - name: AIRFLOW__CORE__SQL_ALCHEMY_CONN
      #     value: postgresql+psycopg2://airflow:airflow123$@postgres:5432/airflow
      #   - name: AIRFLOW_CONN_S3
      #     value: aws://minioadmin:minioadmin@/?endpoint_url=http:%2F%2Fminio:9000
      #   - name: AIRFLOW_CONN_TRINO_CONNECTION
      #     value: trino://admin:@trino:8080/
      #   # - name: _AIRFLOW_DB_MIGRATE
      #   #   value: 'true'
      #   # - name: _AIRFLOW_WWW_USER_CREATE
      #   #   value: 'true'
      #   # - name: _AIRFLOW_WWW_USER_USERNAME
      #   #   value: admin
      #   # - name: _AIRFLOW_WWW_USER_PASSWORD
      #   #   value: airflow123
      #   command:
      #   - bash
      #   - -c
      #   - |
      #     airflow db upgrade
      #     airflow users create \
      #       --username airflow \
      #       --password airflow \
      #       --role Admin \
      #       --email "admin@example.com" || true
      #   # command: [ "airflow", "db", "init" ]
      #   # entrypoint: /bin/bash
      #   # exec /entrypoint airflow args:
      #   # args:
      #   # - bash
      #   # - '-c'
      #   # - exec airflow  db migrate && airflow users create --username admin --password airflow123 --firstname Admin --lastname User --role Admin --email admin@example.com"
      #   # command: [ "sh", "-c", "airflow db upgrade && airflow users create --username admin --password airflow123 --firstname Admin --lastname User --role Admin --email admin@example.com" ]
      #   # command: [ "sh", "-c", "sleep 3600" ]
      #   imagePullPolicy: IfNotPresent
      containers:
      - name: airflow-webserver
        image: osclimate/airflow:2.9.3
        securityContext:
          runAsUser: 0
        # args: [ "webserver" ]
        command: [ "bash", "-c" ]
        args:
        - |
          airflow db migrate &&
          airflow users create \
            --username admin --firstname Air --lastname Flow \
            --role Admin --email admin@example.com --password admin &&
            exec airflow webserver
        env:
        - name: AIRFLOW__CORE__EXECUTOR
          value: KubernetesExecutor
        - name: AIRFLOW__WEBSERVER__SECRET_KEY
          value: airflow
        - name: AIRFLOW__CORE__SQL_ALCHEMY_CONN
          value: postgresql+psycopg2://airflow:airflow123$@postgres:5432/airflow
        - name: AIRFLOW_CONN_S3
          value: aws://minioadmin:minioadmin@/?endpoint_url=http:%2F%2Fminio:9000
        - name: AIRFLOW_CONN_TRINO_CONNECTION
          value: trino://admin:@trino:8080/
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
        volumeMounts:
        - name: airflow-dags
          mountPath: /opt/airflow/dags
      - name: scheduler
        image: osclimate/airflow:2.9.3
        securityContext:
          runAsUser: 0
        args:
        - bash
        - '-c'
        - exec airflow scheduler
        env:
        - name: AIRFLOW__CORE__EXECUTOR
          value: "LocalExecutor"
        - name: AIRFLOW__WEBSERVER__SECRET_KEY
          value: airflow
        - name: AIRFLOW__CORE__SQL_ALCHEMY_CONN
          value: "postgresql+psycopg2://airflow:airflow123$@postgres:5432/airflow"
        - name: AIRFLOW_CONN_S3
          value: aws://minioAdmin:minio1234/?endpoint_url=http:%2F%2Fminio:9000
        - name: AIRFLOW_CONN_TRINO_CONNECTION
          value: trino://admin:@trino:8080/
        volumeMounts:
        - name: airflow-dags
          mountPath: /opt/airflow/dags
      volumes:
      - name: airflow-dags
        persistentVolumeClaim:
          claimName: airflow-dags-pvc
